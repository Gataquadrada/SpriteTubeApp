<!DOCTYPE html>
<html>
  <head>
    <title>Mapping character - Maze's SpriteTube</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script
      src="https://code.jquery.com/jquery-3.6.0.min.js"
      integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"
      integrity="sha256-eTyxS0rkjpLEo16uXTS0uVCS4815lc40K2iVpWDvdSY="
      crossorigin="anonymous"
    ></script>
    <link
      rel="stylesheet"
      href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"
    />
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet"
    />
    <script>
      jQuery(($) => {
        var spritesheet = null

        $(document).on("change", ".action_sheet_upload", function () {
          if ("undefined" != typeof FileReader) {
            const fReader = new FileReader()
            const fInput = $(this)

            fReader.onload = function (e) {
              spritesheet = e.target.result
              $(".img.moved > img, .img.masked > img").prop("src", spritesheet)

              $("#timeline").empty()

              $("#box").css({
                height: "200px",
                width: "200px",
              })

              $(".img.moved").css({
                left: 0,
                top: 0,
              })

              moveImgMask(null, {
                position: {
                  left: $(".img.moved").position().left,
                  top: $(".img.moved").position().top,
                },
              })

              $("body").removeClass("loading").addClass("editing")
            }

            fReader.readAsDataURL(fInput[0].files[0])
          } else {
            alert("Your browser doesn't support offline file manipulation...")
          }
        })

        $.ajax({
          url: "assets/character.png",
          success: function () {
            $.getJSON(
              "assets/frames.json",
              function (data) {
                const box = $("#box")
                const moved = $(".img.moved")

                frames = data.frames

                $.each(frames, function (i, frame) {
                  const frameW = frame.w.replace("px", "") * 1
                  const frameH = frame.h.replace("px", "") * 1
                  const framePX = frame.p.split(" ")[0].replace("px", "") * -1
                  const framePY = frame.p.split(" ")[1].replace("px", "") * -1

                  box.width(frameW)
                  box.height(frameH)

                  moved.css({
                    left: $("#box").position().left - framePX,
                    top: $("#box").position().top - framePY,
                  })

                  frameAdd(framePX, framePY)
                })

                init()
              },
              function (err) {
                init()
              }
            )
          },
          error: function (a, b, c) {
            if (404 == a.status) {
              init()
              $("body").removeClass("editing").addClass("loading")
            }
          },
        })

        function resizeImgMask(e, ui) {
          $(".img.masked").css({
            left: $(".img.moved").position().left - $("#box").position().left,
            top: $(".img.moved").position().top - $("#box").position().top,
          })
        }

        function moveImgMask(e, ui) {
          $(".img.masked").css({
            left: ui.position.left - $("#box").position().left,
            top: ui.position.top - $("#box").position().top,
          })
        }

        function frameAdd() {
          const item = $(`<div class="item">
            <img>
            <button type="button" class="delete action_frame_delete">
              <i class="material-icons">delete_forever</i>
            </button>
          </div>`)
          const itemImg = item.find("img")

          const box = $("#box")
          const boxW = box.outerWidth()
          const boxH = box.outerHeight()
          const boxX = box.position().left
          const boxY = box.position().top

          const moved = $(".img.moved")
          const movedX = moved.position().left
          const movedY = moved.position().top

          item.data({
            "box-width": boxW,
            "box-height": boxH,
            "box-x": boxX,
            "box-y": boxY,
            "moved-x": movedX,
            "moved-y": movedY,
          })

          const canvas = document.createElement("canvas")
          const context = canvas.getContext("2d")
          canvas.width = boxW
          canvas.height = boxH
          context.drawImage(
            moved.find("img")[0],
            boxX - movedX,
            boxY - movedY,
            boxW,
            boxH,
            0,
            0,
            canvas.width,
            canvas.height
          )

          itemImg.prop("src", canvas.toDataURL())

          $("#timeline").append(item)
        }

        function init() {
          setInterval(function () {
            if (!$("#timeline").is(":visible")) return null

            $("#timeline > .item").each(function () {
              const item = $(this)
              const itemImg = item.find("img")
              const ratio = item.outerWidth() / item.data("box-width")
              itemImg.height(item.data("box-height") * ratio)
            })
          }, 500)

          $(document).on("keydown", function (e) {
            const moved = $(".img.moved")

            if (38 == e.keyCode) {
              moved.css("top", moved.position().top - 1)
            } else if (40 == e.keyCode) {
              moved.css("top", moved.position().top + 1)
            } else if (37 == e.keyCode) {
              moved.css("left", moved.position().left - 1)
            } else if (39 == e.keyCode) {
              moved.css("left", moved.position().left + 1)
            }

            moveImgMask(e, {
              position: {
                left: moved.position().left,
                top: moved.position().top,
              },
            })
          })

          $(document).on("keyup", function (e) {
            const moved = $(".img.moved")

            moveImgMask(e, {
              position: {
                left: moved.position().left,
                top: moved.position().top,
              },
            })
          })

          $("#box").resizable({
            handles: "all",
            create: resizeImgMask,
            resize: resizeImgMask,
            start: resizeImgMask,
            stop: resizeImgMask,
          })

          $(".img.moved").draggable({
            start: moveImgMask,
            drag: moveImgMask,
            stop: moveImgMask,
          })

          $("#timeline").sortable()

          $("#preview")
            .draggable({ containment: "#edit", scroll: false })
            .resizable({
              handles: "all",
            })

          $(document).on("click", "#action_timeline_toggle", function () {
            $("#timeline").toggleClass("open")
          })

          $(document).on("click", "#action_preview", function () {
            $("#preview").toggleClass("open")
          })

          $(document).on("click", "#action_frame_add", function () {
            frameAdd()
          })

          $(document).on("click", "#timeline > .item", function () {
            const item = $(this)
            const box = $("#box")
            const boxW = item.data("box-width")
            const boxH = item.data("box-height")
            const moved = $(".img.moved")
            const movedX = item.data("moved-x")
            const movedY = item.data("moved-y")

            box.width(boxW)
            box.height(boxH)

            moved.css({
              left: movedX,
              top: movedY,
            })

            moveImgMask(null, {
              position: {
                left: moved.position().left,
                top: moved.position().top,
              },
            })
          })

          $(document).on("click", ".action_frame_delete", function (e) {
            e.stopImmediatePropagation()
            $(this).parent().remove()
          })

          $(document).on("click", "#action_timeline_save", function () {
            const button = $(this)

            var timeline = []

            $("#timeline > .item").each(function () {
              const item = $(this)
              const boxW = item.data("box-width")
              const boxH = item.data("box-height")
              const boxX = item.data("box-x")
              const boxY = item.data("box-y")
              const movedX = item.data("moved-x")
              const movedY = item.data("moved-y")

              timeline.push({
                w: `${boxW}px`,
                h: `${boxH}px`,
                p: `${(boxX - movedX) * -1}px ${(boxY - movedY) * -1}px`,
              })
            })

            $.ajax({
              type: "POST",
              url: "/map",
              data: {
                frames: timeline,
                spritesheet: spritesheet,
              },
              dataType: "JSON",
              beforeSend: function () {
                button.prop("disabled", true)
              },
              success: function (data) {
                button.prop("disabled", false)

                if (data.ok) {
                  alert("Saved!")
                } else {
                  alert("Error on save!")
                }
              },
              error: function (err) {
                button.prop("disabled", false)
                alert("Error!")
                console.log(err)
              },
            })
          })
        }
      })
    </script>
    <style>
      body,
      html {
        margin: 0;
        padding: 0;
      }
      * {
        box-sizing: border-box;
        user-select: none;
      }
      #load {
        align-items: center;
        background: #18191b;
        display: none;
        inset: 0;
        justify-content: center;
        position: fixed;
        z-index: 999;
      }
      #edit {
        background: #18191b;
        display: block;
        inset: 0;
        position: fixed;
        z-index: 1;
      }
      body.loading #load {
        display: flex;
      }
      #load button {
        position: relative;
      }
      #load button > input[type="file"] {
        cursor: pointer;
        height: 100%;
        left: 0;
        opacity: 0;
        position: absolute;
        top: 0;
        width: 100%;
      }
      #load > button {
        background: #176e6d;
        border: 1px solid #053938;
        border-radius: 3px;
        color: #fff;
        cursor: pointer;
        font-family: Verdana, Geneva, Tahoma, sans-serif;
        padding: 1rem 2rem;
      }
      #overlay {
        background: rgba(45, 45, 45, 0.5);
        inset: 0;
        pointer-events: none;
        position: fixed;
        z-index: 4;
      }
      .img {
        left: 0;
        position: fixed;
        top: 0;
        z-index: 3;
      }
      #box {
        border: 1px dashed #fff;
        height: 200px;
        left: 50% !important;
        overflow: hidden;
        position: fixed;
        top: 50% !important;
        transform: translate(-50%, -50%);
        width: 200px;
        z-index: 5;
      }
      #box > .img {
        pointer-events: none;
      }
      #timeline {
        background: #448488;
        border-radius: 0 3px 3px 0;
        display: none;
        height: 100%;
        left: 0;
        overflow-x: hidden;
        overflow-y: auto;
        padding: 0 0.5rem 0.5rem 0.5rem;
        position: fixed;
        top: 0;
        width: 200px;
        z-index: 6;
      }
      #timeline.open {
        display: block;
      }
      #timeline > .item {
        border: 1px solid #053938;
        border-radius: 3px;
        cursor: move;
        font-size: 0;
        margin-top: 0.5rem;
        position: relative;
      }
      #timeline > .item > img {
        border-radius: 3px;
        width: 100%;
      }
      #timeline > .item > .delete {
        background: rgb(210, 26, 26, 0.5);
        border: 0;
        border-radius: 3px;
        color: #fff;
        cursor: pointer;
        display: none;
        height: 2.5rem;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
      }
      #timeline > .item > .delete > i {
        font-size: 2rem;
      }
      #timeline > .item:hover > .delete {
        display: block;
      }
      #controls {
        display: flex;
        flex-direction: column;
        position: fixed;
        bottom: 0.5rem;
        right: 0.5rem;
        z-index: 7;
      }
      #controls > button {
        background: #448488;
        border: 1px solid #053938;
        color: #fafafa;
        cursor: pointer;
        display: block;
        font-size: 0.9rem;
        text-align: left;
        padding: 0.4rem 0.5rem;
        position: relative;
      }
      #controls > button:hover {
        background: #053938;
      }
      #controls > button:disabled {
        background: #448488;
        cursor: not-allowed;
        opacity: 0.5;
      }
      #controls > button:first-child {
        border-radius: 3px 3px 0px 0px;
      }
      #controls > button:last-child {
        border-radius: 0px 0px 3px 3px;
      }
      #controls > button > i {
        font-size: 1rem;
        float: left;
        margin-right: 0.15rem;
      }
      #controls > button > input[type="file"] {
        cursor: pointer;
        height: 100%;
        left: 0;
        opacity: 0;
        position: absolute;
        top: 0;
        width: 100%;
      }
      #preview {
        background: rgb(0, 255, 0);
        border-radius: 3px;
        display: none;
        height: 200px;
        position: fixed;
        right: 0;
        top: 0;
        width: 200px;
        z-index: 8;
      }
      #preview.open {
        display: block;
      }
      #preview > #preview_handle {
        align-items: center;
        background: #666666;
        border-radius: 3px 3px 0 0;
        color: #fff;
        cursor: move;
        display: flex;
        height: 20px;
        left: 0;
        padding: 0 0 0 5px;
        position: absolute;
        top: 0;
        width: 100%;
      }
      #preview > #preview_handle > i {
        font-size: 15px;
      }
      #preview > iframe {
        position: absolute;
        height: calc(100% - 20px);
        left: 0;
        top: 20px;
        width: 100%;
      }
    </style>
  </head>
  <body class="editing">
    <div id="load">
      <button type="button">
        Load image
        <input type="file" class="action_sheet_upload" accept=".png" />
      </button>
    </div>
    <div id="edit">
      <div class="img moved"><img src="assets/character.png" /></div>
      <div id="overlay"></div>
      <div id="box">
        <div class="img masked"><img src="assets/character.png" /></div>
      </div>
      <div id="timeline" class="open"></div>
      <div id="controls">
        <button id="action_preview" type="button">
          <i class="material-icons">account_box</i>
          <span>Preview</span>
        </button>
        <button id="action_frame_add" type="button">
          <i class="material-icons">camera_alt</i>
          <span>Add frame</span>
        </button>
        <button id="action_timeline_toggle" type="button">
          <i class="material-icons">burst_mode</i> <span>Timeline</span>
        </button>
        <button type="button">
          <i class="material-icons">cloud_upload</i> <span>Upload</span>
          <input type="file" class="action_sheet_upload" accept=".png" />
        </button>
        <button id="action_timeline_save" type="button">
          <i class="material-icons">save</i> <span>Save</span>
        </button>
      </div>
      <div id="preview">
        <div id="preview_handle"><i class="material-icons">menu</i></div>
        <iframe src="http://127.0.0.1:3000/" frameborder="0"></iframe>
      </div>
    </div>
  </body>
</html>
